%Quantumnesses
extraInputs = {'interpreter','latex','fontsize',14};
dt=.1;
load('LargeTdata.mat');
X = X - mean(X);
sup_mg = X(1:floor(.85*length(X)));
nt_mg = length(sup_mg);

chunk_length = 200; %input size at each step
pred_length = 100; %how many samples to predict
N_chunk = floor(nt_mg/chunk_length)-1;
output = zeros(chunk_length, N_chunk);

Tspan = (0:chunk_length-1)*dt;

% Osc. parameters
d = 20;
a = diag(sqrt(1:d-1),1);

a_0 = 1+1j;
%rho_0(7,7) = 1;
X_hat = a+a';
P_hat =1j*(a-a');
[XV,XD] = eig(X_hat);
XDD = diag(XD);
XD = diag(tanh(XDD));

[PV,PD] = eig(P_hat);
PDD = diag(PD);
PD = diag(tanh(PDD));
theta = pi/2; %rand * pi;
Observable = cos(theta) *XV * XD * XV' + sin(theta) * PV * PD * PV';

K = 0.05; kappa = .1; alpha = 1.2; lambda = 0;% .05, .1, 1
param = [K, kappa, alpha];

%%
figure;
subplot(1,2,1)

I_coh = 0;
D = zeros(200,d*d);
rho_0 = coherent_state(1+1j, d);
for chunk = 1:10
input = sup_mg(1+(chunk-1)*chunk_length: chunk*chunk_length);
[T,rho] = ode45(@(t,rho) Quantum_osc(t,rho,Tspan,input,a, param), Tspan, reshape(rho_0,[d^2,1]));
I_coh = I_coh + LeeJeong(rho)/10;
D = D + rho/10;
end
plot((0:chunk_length-1)*dt, I_coh.*(I_coh>0), 'LineWidth', 2.0);
%title('Evolution of quantumness measures in time', extraInputs{:});
hold on
save('coherent.mat','D');
%%

I_mix=0;
rho_0 = state_prep(d,2,2,0);
D = zeros(200,d*d);
for chunk = 1:10
input = sup_mg(1+(chunk-1)*chunk_length: chunk*chunk_length);
[T,rho] = ode45(@(t,rho) Quantum_osc(t,rho,Tspan,input,a, param), Tspan, reshape(rho_0,[d^2,1]));
I_mix = I_mix + LeeJeong(rho)/10;
D = D + rho/10;
end
save('mixed.mat','D');
plot((0:chunk_length-1)*dt, I_mix.*(I_mix>0), 'LineWidth', 2.0);
hold on
%%
I_cat = 0;
rho_0 = state_prep(d,2,2,1);
D = zeros(200,d*d);
for chunk = 1:10
input = sup_mg(1+(chunk-1)*chunk_length: chunk*chunk_length);
[T,rho] = ode45(@(t,rho) Quantum_osc(t,rho,Tspan,input,a, param), Tspan, reshape(rho_0,[d^2,1]));
I_cat = I_cat + LeeJeong(rho)/10;
D = D + rho/10;
end
save('cat.mat','D');

plot((0:chunk_length-1)*dt, I_cat.*(I_cat>0), 'LineWidth', 2.0);
hold on
xlabel('t (s)', extraInputs{:});
ylabel('Lee-Jeong Quantumness (I)', extraInputs{:});
%%
I_6 = zeros(1,chunk_length);
rho_0 = zeros(d,d);
rho_0(7,7)=1;
D = zeros(200,d*d);
for chunk = 1:10
input = sup_mg(1+(chunk-1)*chunk_length: chunk*chunk_length);
[T,rho] = ode45(@(t,rho) Quantum_osc(t,rho,Tspan,input,a, param), Tspan, reshape(rho_0,[d^2,1]));
I_6 = I_6 + LeeJeong(rho)/10;
D = D + rho/10;
end
save('ket6.mat','D');
plot((0:chunk_length-1)*dt, I_6.*(I_6>0), 'LineWidth', 2.0);
hold off
% Run up until here. Go and generate Wigner negativities in Wig. Com
%%
subplot(1,2,2)
load 'mixed-neg.mat'
plot((0:chunk_length-1)*dt, -neg, 'LineWidth', 2.0 );
hold on
load 'cat-neg.mat'
plot((0:chunk_length-1)*dt, -neg, 'LineWidth', 2.0 );
hold on
load 'coh-neg.mat'
plot((0:chunk_length-1)*dt, -neg, 'LineWidth', 2.0 );
hold on
load 'ket6-neg.mat'
plot((0:chunk_length-1)*dt, -neg, 'LineWidth', 2.0 );
ylabel('Wigner Negativity (W)', extraInputs{:});
xlabel('t(s)', extraInputs{:});